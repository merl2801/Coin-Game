# IMPORTANT: Replace PROJECT_ID in the script below with your actual project ID
# You can find your project ID by going to the project settings
#
# LABELS:
# - 'To Do': Default label for all new issues
# - 'Bug': Automatically added when title contains: bug, fix, error, crash
# - 'Feature': Automatically added when title contains: feature, add, new
# - 'Enhancement': Automatically added when title contains: improve, enhance, better
# - 'Game Design': Automatically added when title contains: design, level, character, graphic
name: Scrum Backlog Automation

on:
  issues:
    types: [opened, labeled]

jobs:
  auto-label-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Auto assign labels for new issues
        uses: actions/github-script@v7
        with:
          script: |
            // Game related labels
            const defaultLabels = ['To Do'];
            const issueTitleLower = context.payload.issue.title.toLowerCase();
            
            // Analyze issue title and content to determine appropriate labels
            if (issueTitleLower.includes('bug') || 
                issueTitleLower.includes('fix') || 
                issueTitleLower.includes('error') || 
                issueTitleLower.includes('crash')) {
              defaultLabels.push('Bug');
            }
            
            if (issueTitleLower.includes('feature') || 
                issueTitleLower.includes('add') || 
                issueTitleLower.includes('new')) {
              defaultLabels.push('Feature');
            }
            
            if (issueTitleLower.includes('improve') || 
                issueTitleLower.includes('enhance') || 
                issueTitleLower.includes('better')) {
              defaultLabels.push('Enhancement');
            }
            
            if (issueTitleLower.includes('design') || 
                issueTitleLower.includes('level') || 
                issueTitleLower.includes('character') ||
                issueTitleLower.includes('graphic')) {
              defaultLabels.push('Game Design');
            }
            
            const issue = context.payload.issue;
            
            // Only add labels if the issue doesn't have any
            if (issue.labels.length === 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: defaultLabels
              });
              console.log(`Added labels: ${defaultLabels.join(', ')}`);
            }

      - name: Add issue to "@merl2801's untitled project"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // This uses the GraphQL API to add the issue to the project
            // Note: You'll need to replace PROJECT_ID with your actual project ID
            // You can find your project ID by navigating to the project and looking at the URL
            // or by using the GitHub GraphQL API Explorer
            
            const PROJECT_ID = "PVT_kwHOBbaxrc4BCJFM"; // Replace with your actual project ID
            const issue = context.payload.issue;
            
            try {
              // First we need to get the project node ID
              const addIssueToProject = await github.graphql(`
                mutation($projectId:ID!, $contentId:ID!) {
                  addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                    item {
                      id
                    }
                  }
                }
              `, {
                projectId: PROJECT_ID,
                contentId: issue.node_id
              });
              
              console.log(`Successfully added issue #${issue.number} to project`);
            } catch (error) {
              console.log(`Failed to add issue to project: ${error}`);
            }
